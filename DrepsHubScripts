if game.PlaceId == 8579989858 then
      
      
    -- Super Clicker Sim Starts here 
     
     
     local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

      local Window = Library.CreateLib("Dreps Hub", "DarkTheme")

      local Main = Window:NewTab("Main")

      local MainSection = Main:NewSection("Farm")

      MainSection:NewButton("Auto Click", "Automatically clicks for you.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/AANPLtM6'))()
      end)

      MainSection:NewToggle("On/Off", "Turn auto clicker on and off", function(state)
          if state then
              loadstring(game:HttpGet('https://pastebin.com/raw/AANPLtM6'))()
          else
              loadstring(game:HttpGet('https://pastebin.com/raw/P1Gci503'))()
          end
      end)



      MainSection:NewButton("Auto Rebirth", "Automatically rebirths for you.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/4J8NkYKy'))()
      end)

      MainSection:NewToggle("On/Off", "Turn auto rebirth on and off", function(state)
          if state then
              loadstring(game:HttpGet('https://pastebin.com/raw/BEfw1fc4'))()
          else
              loadstring(game:HttpGet('https://pastebin.com/raw/mQR1QQST'))()
          end
      end)


      local Tab = Window:NewTab("Misc")

      local TeleportsSection = Tab:NewSection("Teleport")
  
     
      
     
      TeleportsSection:NewButton("Upgrades", "Teleport to upgrades shop.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/NXUjkz0v'))()
      end)

      TeleportsSection:NewButton("Skins", "if you get trapped turn on shiftlock).", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/9sMkZ2FR'))()
      end)

      TeleportsSection:NewButton("Ranks", "Teleport to ranks shop.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/6Xh9dVbz'))()
      end)

      TeleportsSection:NewButton("Rebirths", "Teleport to rebirth shop.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/R8yYtkiS'))()
          end)
      
       TeleportsSection:NewButton("Spawn", "Teleport to spawn.", function()
          loadstring(game:HttpGet('https://pastebin.com/raw/WkrvD0sW'))()
          end)
      
      
      

      local IslandSection = Tab:NewSection("Island Teleports")

      IslandSection:NewButton("Crystal Island", "Teleport to Crystal Island", function() -- 1
          loadstring(game:HttpGet('https://pastebin.com/raw/rD2jMzmT'))()
      end)

      IslandSection:NewButton("Vulcan Island", "Teleport to Vulcan Island", function() -- 2 -- on this
          loadstring(game:HttpGet('https://pastebin.com/raw/aJbgH8Kx'))()
      end)

      IslandSection:NewButton("Forest Island", "Teleport to Forest Island", function() -- 3
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Islands.Island3.Union.CFrame) -- MUST HAVE CFrame
      end)

      IslandSection:NewButton("Angel Island", "Teleport to Angel Island", function() -- 4
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Islands.Island4.Union.CFrame) -- MUST HAVE CFrame
      end)

    

      IslandSection:NewButton("Hacker Island", "Teleport to Hacker Island", function() -- 6 
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Islands.Island6.Union.CFrame) -- MUST HAVE CFrame
      end)

      IslandSection:NewButton("Mythical Island", "Teleport to Mythical Island", function() -- 7 
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Islands["Island 7"].Part.CFrame) -- MUST HAVE CFrame
      end)

      IslandSection:NewButton("Russo Island", "Teleport to Russo Island", function() -- 8
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Portals["Russo Island"].Part.CFrame) -- MUST HAVE CFrame
      end)

      IslandSection:NewButton("Training Island", "Teleport to Training Island", function() -- 8
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Portals["Training-Island"].Part.CFrame) -- MUST HAVE CFrame
      end)

     
     
      MainSection:NewKeybind("Click to Toggle UI", "Right Control", Enum.KeyCode.RightControl, function()
          Library:ToggleUI()
      end)

      --Super Clicker Sim ends here

      -- Clicker Madness starts here
  elseif game.PlaceId == 5490351219 then
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

local Window = Library.CreateLib("Dreps Hub | Clicker Madness", "DarkTheme")

local FarmTab = Window:NewTab("Farm")

local FarmSection = FarmTab:NewSection("Clicks and Rebirths")

FarmSection:NewToggle("Auto Click", "Automatically Clicks for you", function(state)
  if state then
      getgenv().autoClick = true

spawn(function()
  while getgenv().autoClick == true do
local clickMod = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.Aero.Controllers.UI.Click)
clickMod:Click()
wait()
end
end)
  else
      getgenv().autoClick = false

      spawn(function()
          while getgenv().autoClick == true do
              local clickMod = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.Aero.Controllers.UI.Click)
              clickMod:Click()
      wait()
      end
      end)
  end
end)


FarmSection:NewToggle("Auto Rebirth", "Automatically Rebirths for you", function(state)
  if state then
      getgenv().autoRebirth = true
      spawn (function()
      
          while getgenv().autoRebirth == true do
          local args = {
          [1] = 5800
      }
      
      game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.RebirthService.BuyRebirths:FireServer(unpack(args))
      
      wait()
      end
      end)
  else
      getgenv().autoRebirth  = false
spawn (function()

  while getgenv().autoRebirth == true do
  local args = {
  [1] = 1000
}

game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.RebirthService.BuyRebirths:FireServer(unpack(args))

wait()
end
end)
  end
end)

local BunnySection = FarmTab:NewSection("Easter")

--auto buy easter egg start here



-- auto bunny start here       
BunnySection:NewToggle("Auto Easter Bunny", "Auto Farm Eggs to summon easter egg", function(state)
    if state then
        getgenv().autoBunnyTP = true
spawn (function()
    while getgenv().autoBunnyTP == true do
function teleportTO(placeCFrame)
    local plyr = game.Players.LocalPlayer
    if plyr.Character then
     plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
    end
end
teleportTO(CFrame.new(797, 9, -264))
wait()



        local clickMod = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.Aero.Controllers.UI.Click)
                clickMod:Click()
        wait()
end
end)
    else
        getgenv().autoBunnyTP = false
spawn (function()
    while getgenv().autoBunnyTP == true do
function teleportTO(placeCFrame)
    local plyr = game.Players.LocalPlayer
    if plyr.Character then
     plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
    end
end
teleportTO(CFrame.new(797, 9, -264))
wait()
end
end)


        local clickMod = require(game:GetService("Players")["LocalPlayer"].PlayerScripts.Aero.Controllers.UI.Click)
                clickMod:Click()
              
        wait()
    
    end
end)




--auto bunny end here

--auto easter egg start here 

BunnySection:NewToggle("Auto Summon Easter Egg", "Will auto summon easter eggs.", function(state)
    if state then
      getgenv().autoEasterEgg  = true
      spawn(function()
        while getgenv().autoEasterEgg == true do

local args = {
    [1] = "easter"
}

game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.EggService.Purchase:FireServer(unpack(args))
wait()
end
end)

    else
        getgenv().autoEasterEgg  = false
        spawn(function()
          while getgenv().autoEasterEgg == true do
  
  local args = {
      [1] = "easter"
  }
  
  game:GetService("ReplicatedStorage").Aero.AeroRemoteServices.EggService.Purchase:FireServer(unpack(args))
  wait()
  end
  end)
    end
end)

--auto easter egg end here

local LocalTab = Window:NewTab("Local Player")

local LocalSection = LocalTab:NewSection("Teleports")

 
-- walkspeed and jump power start here



local PlayerSection = LocalTab:NewSection("Player")

PlayerSection:NewLabel("Hard to see but there is a slider.")

PlayerSection:NewSlider("WalkSpeed", "Go fast", 500, 16, function(s) 
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

PlayerSection:NewSlider("Jumppower", "Jump high", 350, 50, function(s)
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = s
end)

PlayerSection:NewButton("Reset JumpPower/WalkSpeed", "Resets jump and walk to normal speed.", function()
  game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
  game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end)
-- walkspeed/jumppower ends here






LocalSection:NewDropdown("Teleport Islands 1", "Teleport to Islands", {"Lava Island","Desert Island","Winter Island"}, function(SelectedLocation)

  if SelectedLocation == "Lava Island" then
      
          function teleportTO(placeCFrame)  --   
              local plyr = game.Players.LocalPlayer
              if plyr.Character then
               plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
              end
          end
          teleportTO(game:GetService("Workspace").Worlds.Lava.Teleport.CFrame)
  elseif SelectedLocation == "Desert Island" then
      function teleportTO(placeCFrame)  --   
          local plyr = game.Players.LocalPlayer
          if plyr.Character then
           plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
          end
      end
      teleportTO(game:GetService("Workspace").Worlds.Desert.Teleport.CFrame)
  elseif SelectedLocation == "Winter Island" then
      function teleportTO(placeCFrame)  --   
          local plyr = game.Players.LocalPlayer
          if plyr.Character then
           plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
          end
      end
      teleportTO(game:GetService("Workspace").Worlds.Winter.Teleport.CFrame)
      end
  end)



  
  
      LocalSection:NewDropdown("Teleport Islands 2", "Teleport to Islands", {"Toxic Island","Ocean Island","Candy Island"}, function(SelectedLocation)
          if SelectedLocation == "Toxic Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Toxic.Teleport.CFrame)
          elseif SelectedLocation == "Ocean Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Ocean.Teleport.CFrame)
          elseif SelectedLocation == "Candy Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Candy.Teleport.CFrame)
          end
       end)
       LocalSection:NewDropdown("Teleport Islands 3", "Teleport to Islands", {"Space Island","Forest Island","City Island"}, function(SelectedLocation)
          if SelectedLocation == "Space Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Space.Teleport.CFrame)
          elseif SelectedLocation == "Forest Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Forest.Teleport.CFrame)
          elseif SelectedLocation == "City Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.City.Teleport.CFrame)
          end
       end)
       LocalSection:NewDropdown("Teleport Islands 4", "Teleport to Islands", {"Blocks Island","Future Island","Infinity Island"}, function(SelectedLocation)
          if SelectedLocation == "Blocks Island" then
              function teleportTO(placeCFrame)  --   
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Blocks.Teleport.CFrame)
          elseif SelectedLocation == "Future Island" then
              function teleportTO(placeCFrame)  
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Future.Teleport.CFrame)
          elseif SelectedLocation == "Infinity Island" then
              function teleportTO(placeCFrame) 
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Infinity.Teleport.CFrame)
          end
       end)

       LocalSection:NewDropdown("Teleport Islands 5", "Teleport to Islands", {"Moon Island","Fire Island","Storm Island"}, function(SelectedLocation)
          if SelectedLocation == "Moon Island" then
              function teleportTO(placeCFrame) 
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Moon.Teleport.CFrame)
          elseif SelectedLocation == "Fire Island" then
              function teleportTO(placeCFrame)  
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Fire.Teleport.CFrame)
          elseif SelectedLocation == "Storm Island" then
              function teleportTO(placeCFrame)  
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Storm.Teleport.CFrame)
          end
       end)
    LocalSection:NewDropdown("Teleport Islands 6", "Teleport to Islands", {"Dominus Island"}, function(SelectedLocation)
          if SelectedLocation == "Dominus Island" then

            
              function teleportTO(placeCFrame)  
                  local plyr = game.Players.LocalPlayer
                  if plyr.Character then
                   plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
                  end
              end
              teleportTO(game:GetService("Workspace").Worlds.Dominus.Teleport.CFrame)
          end
       end)


       
       
       local SettingsTab = Window:NewTab("Settings")

       local UISection = SettingsTab:NewSection("Toggle GUI")

       
       UISection:NewKeybind("Toggle UI Button", "Don't Change the Keybind", Enum.KeyCode.RightControl, function()
          Library:ToggleUI()
      end)


  
-- Clicker Madness ends here

  elseif game.PlaceId == 2753915549 then
      wait(1.2)
game.StarterGui:SetCore("SendNotification", {
Title = "JOIN"; -- the title (ofc)
Text = "https://discord.gg/TngrGTXEhB"; -- what the text says (ofc)

Duration = 7; -- how long the notification should in secounds
})







-- blox fruits 1st sea starts here







local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

local Window = Library.CreateLib("Dreps Hub | Blox Fruits", "DarkTheme")


local Main = Window:NewTab("Player")


local Teleports = Main:NewSection("Teleports")

Teleports:NewLabel("Script will reset character when you get to location.")

Teleports:NewButton("Sky Island 2", "You may have to click 2-3 times", function()
  function teleportTO(placeCFrame)  --   
      local plyr = game.Players.LocalPlayer
      if plyr.Character then
       plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
      end
  end
  teleportTO(CFrame.new(-4649, 868, -1721)) -- portal coords (works with sky portal and fish portal)
end)

Teleports:NewButton("Underwater City", "You may have to click 2-3 times", function()
  function teleportTO(placeCFrame)  --   
      local plyr = game.Players.LocalPlayer
      if plyr.Character then
       plyr.Character.HumanoidRootPart.CFrame = placeCFrame;
      end
  end
  teleportTO(CFrame.new(61170, 1, 1916)) -- portal coords (works with sky portal and fish portal)
  
end)

Teleports:NewButton("Jungle", "Tween to jungle", function()
  local teleport_table = {
      location1 = Vector3.new(-1250, 12, 341), -- your desired position
      
  }
  
  local tween_s = game:GetService('TweenService')
  local tweeninfo = TweenInfo.new(14,Enum.EasingStyle.Linear)
  
  local lp = game.Players.LocalPlayer
  
  function bypass_teleport(v)
      if lp.Character and 
      lp.Character:FindFirstChild('HumanoidRootPart') then
          local cf = CFrame.new(v)
          local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
          a:Play()
          -- a.Completed:Wait()
          -- print('Teleporting Done!')
          a.Completed:Wait(0)
          game.Players.LocalPlayer.Character.Humanoid.Health = 0
      end
  end
  
  bypass_teleport(teleport_table.location1)
 
end)

Teleports:NewButton("Pirate Village", "Tween to Pirate Village", function()
  local teleport_table = {
      location1 = Vector3.new(-1122, 5, 3856), -- your desired position
      
  }
  
  local tween_s = game:GetService('TweenService')
  local tweeninfo = TweenInfo.new(15,Enum.EasingStyle.Linear)
  
  local lp = game.Players.LocalPlayer
  
  function bypass_teleport(v)
      if lp.Character and 
      lp.Character:FindFirstChild('HumanoidRootPart') then
          local cf = CFrame.new(v)
          local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
          a:Play()
          -- a.Completed:Wait()
          -- print('Teleporting Done!')
          a.Completed:Wait(0)
          game.Players.LocalPlayer.Character.Humanoid.Health = 0
      end
  end
  
  bypass_teleport(teleport_table.location1)
end)

Teleports:NewButton("Desert", "Tween to Desert", function()
  local teleport_table = {
      location1 = Vector3.new(1094, 7, 4193), -- your desired position
      
  }
  
  local tween_s = game:GetService('TweenService')
  local tweeninfo = TweenInfo.new(16,Enum.EasingStyle.Linear)
  
  local lp = game.Players.LocalPlayer
  
  function bypass_teleport(v)
      if lp.Character and 
      lp.Character:FindFirstChild('HumanoidRootPart') then
          local cf = CFrame.new(v)
          local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
          a:Play()
          -- a.Completed:Wait()
          -- print('Teleporting Done!')
          a.Completed:Wait(0)
          game.Players.LocalPlayer.Character.Humanoid.Health = 0
      end
  end
  
  bypass_teleport(teleport_table.location1)
end)

Teleports:NewButton("Fountain City", "Tween to Fountain City", function()
  local teleport_table = {
      location1 = Vector3.new(5133, 5, 4038), -- your desired position
      
  }
  
  local tween_s = game:GetService('TweenService')
  local tweeninfo = TweenInfo.new(14,Enum.EasingStyle.Linear)
  
  local lp = game.Players.LocalPlayer
  
  function bypass_teleport(v)
      if lp.Character and 
      lp.Character:FindFirstChild('HumanoidRootPart') then
          local cf = CFrame.new(v)
          local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
          a:Play()
          -- a.Completed:Wait()
          -- print('Teleporting Done!')
          a.Completed:Wait(0)
          game.Players.LocalPlayer.Character.Humanoid.Health = 0
      end
  end
  
  bypass_teleport(teleport_table.location1)
end)

Teleports:NewButton("Marine Starter", "Will set spawn at Pirate island", function()
  local teleport_table = {
      location1 = Vector3.new(-2573, 7, 2047), -- your desired position
    
  }
  
  local tween_s = game:GetService('TweenService')
  local tweeninfo = TweenInfo.new(14,Enum.EasingStyle.Linear)
  
  local lp = game.Players.LocalPlayer
  
  function bypass_teleport(v)
      if lp.Character and 
      lp.Character:FindFirstChild('HumanoidRootPart') then
          local cf = CFrame.new(v)
          local a = tween_s:Create(lp.Character.HumanoidRootPart,tweeninfo,{CFrame=cf})
          a:Play()
          -- a.Completed:Wait()
          -- print('Teleporting Done!')
          a.Completed:Wait(0)
          game.Players.LocalPlayer.Character.Humanoid.Health = 0
      end
  end
  
  bypass_teleport(teleport_table.location1)
end)




local ESPSection = Main:NewSection("ESP")

ESPSection:NewButton("Player ESP", "SOMETIMES you have to be close to players to work", function()

--- Tut

local esp_settings = { ---- table for esp settings 
textsize = 8,
colour = 255,255,255
}

local gui = Instance.new("BillboardGui")
local esp = Instance.new("TextLabel",gui) ---- new instances to make the billboard gui and the textlabel



gui.Name = "Cracked esp"; ---- properties of the esp
gui.ResetOnSpawn = false
gui.AlwaysOnTop = true;
gui.LightInfluence = 0;
gui.Size = UDim2.new(1.75, 0, 1.75, 0);
esp.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
esp.Text = ""
esp.Size = UDim2.new(0.0001, 0.00001, 0.0001, 0.00001);
esp.BorderSizePixel = 4;
esp.BorderColor3 = Color3.new(esp_settings.colour)
esp.BorderSizePixel = 0
esp.Font = "GothamSemibold"
esp.TextSize = esp_settings.textsize
esp.TextColor3 = Color3.fromRGB(esp_settings.colour) -- text colour

game:GetService("RunService").RenderStepped:Connect(function() ---- loops faster than a while loop :)
for i,v in pairs (game:GetService("Players"):GetPlayers()) do
  if v ~= game:GetService("Players").LocalPlayer and v.Character.Head:FindFirstChild("Cracked esp")==nil  then -- craeting checks for team check, local player etc
      esp.Text = "{"..v.Name.."}"
      gui:Clone().Parent = v.Character.Head
end
end
end)


local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function getdistancefc(part)
  return (part.Position - c.CFrame.Position).Magnitude
end

local function esp(p,cr)
  local h = cr:WaitForChild("Humanoid")
  local hrp = cr:WaitForChild("HumanoidRootPart")

  local text = Drawing.new("Text")
  text.Visible = false
  text.Center = true 
  text.Outline = true 
  text.Font = 2
  text.Color = Color3.fromRGB(255,255,255)
  text.Size = 13

  local c1 
  local c2 
  local c3 

  local function dc()
      text.Visible = false
      text:Remove()
      if c1 then
          c1:Disconnect()
          c1 = nil 
      end
      if c2 then
          c2:Disconnect()
          c2 = nil 
      end
      if c3 then
          c3:Disconnect()
          c3 = nil 
      end
  end

  c2 = cr.AncestryChanged:Connect(function(_,parent)
      if not parent then
          dc()
      end
  end)

  c3 = h.HealthChanged:Connect(function(v)
      if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
          dc()
      end
  end)

  c1 = rs.RenderStepped:Connect(function()
      local hrp_pos,hrp_os = c:WorldToViewportPoint(hrp.Position)
      if hrp_os then
          text.Position = Vector2.new(hrp_pos.X,hrp_pos.Y)
          text.Text = p.Name .. ' ('..tostring(math.floor(getdistancefc(hrp)))..' ms)'
          text.Visible = true 
      else
          text.Visible = false 
      end
  end)
end

local function p_added(p)
  if p.Character then
      esp(p,p.Character)
  end
  p.CharacterAdded:Connect(function(cr)
      esp(p,cr)
  end)
end


for i,p in next, ps:GetPlayers() do 
  if p ~= lp then
      p_added(p)
  end
end

ps.PlayerAdded:Connect(p_added)
end)
  

    local MainTab = Window:NewTab("Main")

    

     
    local CousinSection = MainTab:NewSection("Blox Fruit Dealer Cousin")
    CousinSection:NewToggle("Auto Blox Fruit Cousin", "Auto buy blox fruit cousin every 2 hours", function(state)

    
        if state then
            getgenv().autoCousin = true
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        else
            getgenv().autoCousin = false
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        end
    end)




    -- auto blox fruit dealer start

local FruitSection = MainTab:NewSection("Blox Fruit Dealer")
FruitSection:NewLabel("Auto buy will replace your current fruit.") 
FruitSection:NewToggle("Auto Buy Kilo", "Auto Buy Kilo", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spin", "Auto Buy Spin", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spin-Spin", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Chop", "Auto Buy Chop", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Chop-Chop", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spring", "Auto Buy Spring", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spring-Spring", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spike", "Auto Buy Spike", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spike-Spike", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Flame", "Auto Buy Flame", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Flame-Flame", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Falcon", "Auto Buy Falcon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Falcon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Ice", "Auto Buy Ice", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Ice-Ice", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Sand", "Auto Buy Sand", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Sand-Sand", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Revive", "Auto Buy Revive", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Revive-Revive", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dark", "Auto Buy Dark", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dark-Dark", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)

FruitSection:NewToggle("Auto Buy Diamond", "Auto Buy Diamond", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Diamond-Diamond", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Light", "Auto Buy Light", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Light-Light", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Love", "Auto Buy Love", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Love-Love", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rubber", "Auto Buy Rubber", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rubber-Rubber", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Barrier", "Auto Buy Barrier", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Barrier-Barrier", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Magma", "Auto Buy Magma", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Door", "Auto Buy Door", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Door-Door", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Quake", "Auto Buy Quake", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Quake-Quake", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Buddha", "Auto Buy Buddha", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Human-Human:Buddha", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy String", "Auto Buy String", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "String-String", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Phoenix", "Auto Buy Phoenix", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Phoenix", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rumble", "Auto Buy Rumble", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rumble-Rumble", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Paw", "Auto Buy Paw", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Paw-Paw", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Gravity", "Auto Buy Gravity", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Gravity-Gravity", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dough", "Auto Buy Dough", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dough-Dough", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Shadow", "Auto Buy Shadow", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Shadow-Shadow", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Venom", "Auto Buy Venom", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Venom-Venom", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Control", "Auto Buy Control", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Control-Control", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Soul", "Auto Buy Soul", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Soul-Soul", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dragon", "Auto Buy Dragon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dragon-Dragon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Leopard", "Auto Buy Leopard", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Leopard-Leopard", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)




-- auto blox fruit dealer end
local NewPlayerTab = Window:NewTab("Local Player")

local NewPlayerSection = NewPlayerTab:NewSection("Race")

NewPlayerSection:NewToggle("Auto Race Ability", "Auto use race ability", function(state)
    if state then
       getgenv().autoRace = true

       spawn (function()
        while getgenv().autoRace == true do
       
       
        local args = {
            [1] = "ActivateAbility"
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
        wait()
    end
end)
    else
        getgenv().autoRace = false

        spawn (function()
         while getgenv().autoRace == true do
        
        
         local args = {
             [1] = "ActivateAbility"
         }
         
         game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
         wait()
     end
 end)
    end
end)
-- auto race end 
--shop start 
local ShopTab = Window:NewTab("Shop")
local FightingStyleTab = ShopTab:NewSection("Fighting Styles")

FightingStyleTab:NewButton("Death Step", "Buy Death Step", function()
    local args = {
        [1] = "BuyDeathStep" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dark Step", "Buy Dark Step", function()
local args = {
    [1] = "BuyBlackLeg"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric", "Buy Electric", function()
    local args = {
        [1] = "BuyElectro" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric Claw", "Buy Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Water Kung Fu", "Buy Water Kung Fu", function()
    local args = {
        [1] = "BuyFishmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Sharkman Karate", "Buy Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)


FightingStyleTab:NewButton("Superhuman", "Buy Superhuman", function()
    local args = {
        [1] = "BuySuperhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Goduman", "Buy Godhuman", function()
    local args = {
        [1] = "BuyGodhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Dragon Breath", "Buy Dragon Breath", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dragon Talon", "Buy Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

local HakiSection = ShopTab:NewSection("Haki")

HakiSection:NewButton("Skyjump", "Buy Skyjump", function()
    local args = {
        [1] = "BuyHaki",
        [2] = "Geppo"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Enhancement", "Buy Enhancement", function()
   

local args = {
    [1] = "BuyHaki",
    [2] = "Buso"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Soru", "Buy Soru", function()
   

    local args = {
        [1] = "BuyHaki",
        [2] = "Soru"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)





-- shop end
local Tab2 = Window:NewTab("Settings")

local Section2 = Tab2:NewSection("Toggle GUI")

Section2:NewKeybind("Click to Toggle UI", " ", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)


    elseif game.PlaceId == 4442272183 then
    
        local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

    local Window = Library.CreateLib("Dreps Hub | Blox Fruits", "DarkTheme")

    local MainTab = Window:NewTab("Main")

    

     
    local CousinSection = MainTab:NewSection("Blox Fruit Dealer Cousin")
    CousinSection:NewToggle("Auto Blox Fruit Cousin", "Auto buy blox fruit cousin every 2 hours", function(state)

    
        if state then
            getgenv().autoCousin = true
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        else
            getgenv().autoCousin = false
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        end
    end)




    -- auto blox fruit dealer start

local FruitSection = MainTab:NewSection("Blox Fruit Dealer")
FruitSection:NewLabel("Auto buy will replace your current fruit.") 
FruitSection:NewToggle("Auto Buy Kilo", "Auto Buy Kilo", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spin", "Auto Buy Spin", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spin-Spin", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Chop", "Auto Buy Chop", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Chop-Chop", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spring", "Auto Buy Spring", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spring-Spring", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spike", "Auto Buy Spike", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spike-Spike", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Flame", "Auto Buy Flame", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Flame-Flame", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Falcon", "Auto Buy Falcon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Falcon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Ice", "Auto Buy Ice", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Ice-Ice", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Sand", "Auto Buy Sand", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Sand-Sand", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Revive", "Auto Buy Revive", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Revive-Revive", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dark", "Auto Buy Dark", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dark-Dark", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)

FruitSection:NewToggle("Auto Buy Diamond", "Auto Buy Diamond", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Diamond-Diamond", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Light", "Auto Buy Light", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Light-Light", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Love", "Auto Buy Love", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Love-Love", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rubber", "Auto Buy Rubber", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rubber-Rubber", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Barrier", "Auto Buy Barrier", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Barrier-Barrier", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Magma", "Auto Buy Magma", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Door", "Auto Buy Door", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Door-Door", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Quake", "Auto Buy Quake", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Quake-Quake", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Buddha", "Auto Buy Buddha", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Human-Human:Buddha", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy String", "Auto Buy String", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "String-String", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Phoenix", "Auto Buy Phoenix", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Phoenix", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rumble", "Auto Buy Rumble", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rumble-Rumble", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Paw", "Auto Buy Paw", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Paw-Paw", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Gravity", "Auto Buy Gravity", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Gravity-Gravity", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dough", "Auto Buy Dough", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dough-Dough", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Shadow", "Auto Buy Shadow", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Shadow-Shadow", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Venom", "Auto Buy Venom", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Venom-Venom", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Control", "Auto Buy Control", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Control-Control", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Soul", "Auto Buy Soul", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Soul-Soul", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dragon", "Auto Buy Dragon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dragon-Dragon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Leopard", "Auto Buy Leopard", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Leopard-Leopard", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)




-- auto blox fruit dealer end
local NewPlayerTab = Window:NewTab("Local Player")

local NewPlayerSection = NewPlayerTab:NewSection("Race")

NewPlayerSection:NewToggle("Auto Race Ability", "Auto use race ability", function(state)
    if state then
       getgenv().autoRace = true

       spawn (function()
        while getgenv().autoRace == true do
       
       
        local args = {
            [1] = "ActivateAbility"
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
        wait()
    end
end)
    else
        getgenv().autoRace = false

        spawn (function()
         while getgenv().autoRace == true do
        
        
         local args = {
             [1] = "ActivateAbility"
         }
         
         game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
         wait()
     end
 end)
    end
end)
-- auto race end 
--shop start 
local ShopTab = Window:NewTab("Shop")
local FightingStyleTab = ShopTab:NewSection("Fighting Styles")

FightingStyleTab:NewButton("Death Step", "Buy Death Step", function()
    local args = {
        [1] = "BuyDeathStep" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dark Step", "Buy Dark Step", function()
local args = {
    [1] = "BuyBlackLeg"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric", "Buy Electric", function()
    local args = {
        [1] = "BuyElectro" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric Claw", "Buy Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Water Kung Fu", "Buy Water Kung Fu", function()
    local args = {
        [1] = "BuyFishmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Sharkman Karate", "Buy Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)


FightingStyleTab:NewButton("Superhuman", "Buy Superhuman", function()
    local args = {
        [1] = "BuySuperhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Goduman", "Buy Godhuman", function()
    local args = {
        [1] = "BuyGodhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Dragon Breath", "Buy Dragon Breath", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dragon Talon", "Buy Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

local HakiSection = ShopTab:NewSection("Haki")

HakiSection:NewButton("Skyjump", "Buy Skyjump", function()
    local args = {
        [1] = "BuyHaki",
        [2] = "Geppo"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Enhancement", "Buy Enhancement", function()
   

local args = {
    [1] = "BuyHaki",
    [2] = "Buso"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Soru", "Buy Soru", function()
   

    local args = {
        [1] = "BuyHaki",
        [2] = "Soru"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)





-- shop end
local Tab2 = Window:NewTab("Settings")

local Section2 = Tab2:NewSection("Toggle GUI")

Section2:NewKeybind("Click to Toggle UI", " ", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)
  -- blox fruits 1st sea  ends here
 
  -- blox fruits 2nd sea starts here

    elseif game.PlaceId == 4442272183 then 

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

    local Window = Library.CreateLib("Dreps Hub | Blox Fruits", "DarkTheme")

    local MainTab = Window:NewTab("Main")

    

     
    local CousinSection = MainTab:NewSection("Blox Fruit Dealer Cousin")
    CousinSection:NewToggle("Auto Blox Fruit Cousin", "Auto buy blox fruit cousin every 2 hours", function(state)

    
        if state then
            getgenv().autoCousin = true
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        else
            getgenv().autoCousin = false
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        end
    end)




    -- auto blox fruit dealer start

local FruitSection = MainTab:NewSection("Blox Fruit Dealer")
FruitSection:NewLabel("Auto buy will replace your current fruit.") 
FruitSection:NewToggle("Auto Buy Kilo", "Auto Buy Kilo", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spin", "Auto Buy Spin", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spin-Spin", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Chop", "Auto Buy Chop", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Chop-Chop", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spring", "Auto Buy Spring", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spring-Spring", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spike", "Auto Buy Spike", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spike-Spike", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Flame", "Auto Buy Flame", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Flame-Flame", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Falcon", "Auto Buy Falcon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Falcon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Ice", "Auto Buy Ice", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Ice-Ice", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Sand", "Auto Buy Sand", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Sand-Sand", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Revive", "Auto Buy Revive", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Revive-Revive", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dark", "Auto Buy Dark", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dark-Dark", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)

FruitSection:NewToggle("Auto Buy Diamond", "Auto Buy Diamond", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Diamond-Diamond", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Light", "Auto Buy Light", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Light-Light", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Love", "Auto Buy Love", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Love-Love", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rubber", "Auto Buy Rubber", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rubber-Rubber", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Barrier", "Auto Buy Barrier", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Barrier-Barrier", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Magma", "Auto Buy Magma", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Door", "Auto Buy Door", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Door-Door", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Quake", "Auto Buy Quake", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Quake-Quake", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Buddha", "Auto Buy Buddha", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Human-Human:Buddha", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy String", "Auto Buy String", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "String-String", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Phoenix", "Auto Buy Phoenix", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Phoenix", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rumble", "Auto Buy Rumble", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rumble-Rumble", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Paw", "Auto Buy Paw", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Paw-Paw", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Gravity", "Auto Buy Gravity", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Gravity-Gravity", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dough", "Auto Buy Dough", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dough-Dough", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Shadow", "Auto Buy Shadow", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Shadow-Shadow", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Venom", "Auto Buy Venom", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Venom-Venom", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Control", "Auto Buy Control", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Control-Control", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Soul", "Auto Buy Soul", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Soul-Soul", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dragon", "Auto Buy Dragon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dragon-Dragon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Leopard", "Auto Buy Leopard", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Leopard-Leopard", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)




-- auto blox fruit dealer end
local NewPlayerTab = Window:NewTab("Local Player")

local NewPlayerSection = NewPlayerTab:NewSection("Race")

NewPlayerSection:NewToggle("Auto Race Ability", "Auto use race ability", function(state)
    if state then
       getgenv().autoRace = true

       spawn (function()
        while getgenv().autoRace == true do
       
       
        local args = {
            [1] = "ActivateAbility"
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
        wait()
    end
end)
    else
        getgenv().autoRace = false

        spawn (function()
         while getgenv().autoRace == true do
        
        
         local args = {
             [1] = "ActivateAbility"
         }
         
         game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
         wait()
     end
 end)
    end
end)

local ESPSection = NewPlayerTab:NewSection("ESP")

ESPSection:NewButton("Player ESP", "Player ESP", function()
    local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function getdistancefc(part)
    return (part.Position - c.CFrame.Position).Magnitude
end

local function esp(p,cr)
    local h = cr:WaitForChild("Humanoid")
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true 
    text.Outline = true 
    text.Font = 2
    text.Color = Color3.fromRGB(255,255,255)
    text.Size = 13

    local c1 
    local c2 
    local c3 

    local function dc()
        text.Visible = false
        text:Remove()
        if c1 then
            c1:Disconnect()
            c1 = nil 
        end
        if c2 then
            c2:Disconnect()
            c2 = nil 
        end
        if c3 then
            c3:Disconnect()
            c3 = nil 
        end
    end

    c2 = cr.AncestryChanged:Connect(function(_,parent)
        if not parent then
            dc()
        end
    end)

    c3 = h.HealthChanged:Connect(function(v)
        if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
            dc()
        end
    end)

    c1 = rs.RenderStepped:Connect(function()
        local hrp_pos,hrp_os = c:WorldToViewportPoint(hrp.Position)
        if hrp_os then
            text.Position = Vector2.new(hrp_pos.X,hrp_pos.Y)
            text.Text = p.Name .. ' ('..tostring(math.floor(getdistancefc(hrp)))..' ms)'
            text.Visible = true 
        else
            text.Visible = false 
        end
    end)
end

local function p_added(p)
    if p.Character then
        esp(p,p.Character)
    end
    p.CharacterAdded:Connect(function(cr)
        esp(p,cr)
    end)
end


for i,p in next, ps:GetPlayers() do 
    if p ~= lp then
        p_added(p)
    end
end

ps.PlayerAdded:Connect(p_added)
end)


-- auto race end 
--shop start 
local ShopTab = Window:NewTab("Shop")
local FightingStyleTab = ShopTab:NewSection("Fighting Styles")

FightingStyleTab:NewButton("Death Step", "Buy Death Step", function()
    local args = {
        [1] = "BuyDeathStep" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dark Step", "Buy Dark Step", function()
local args = {
    [1] = "BuyBlackLeg"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric", "Buy Electric", function()
    local args = {
        [1] = "BuyElectro" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric Claw", "Buy Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Water Kung Fu", "Buy Water Kung Fu", function()
    local args = {
        [1] = "BuyFishmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Sharkman Karate", "Buy Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)


FightingStyleTab:NewButton("Superhuman", "Buy Superhuman", function()
    local args = {
        [1] = "BuySuperhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Goduman", "Buy Godhuman", function()
    local args = {
        [1] = "BuyGodhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Dragon Breath", "Buy Dragon Breath", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dragon Talon", "Buy Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

local HakiSection = ShopTab:NewSection("Haki")

HakiSection:NewButton("Skyjump", "Buy Skyjump", function()
    local args = {
        [1] = "BuyHaki",
        [2] = "Geppo"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Enhancement", "Buy Enhancement", function()
   

local args = {
    [1] = "BuyHaki",
    [2] = "Buso"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Soru", "Buy Soru", function()
   

    local args = {
        [1] = "BuyHaki",
        [2] = "Soru"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)





-- shop end
local Tab2 = Window:NewTab("Settings")

local Section2 = Tab2:NewSection("Toggle GUI")

Section2:NewKeybind("Click to Toggle UI", " ", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)



  elseif game.PlaceId == 4442272183 then

    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

    local Window = Library.CreateLib("Dreps Hub | Blox Fruits", "DarkTheme")

    local MainTab = Window:NewTab("Main")

    

     
    local CousinSection = MainTab:NewSection("Blox Fruit Dealer Cousin")
    CousinSection:NewToggle("Auto Blox Fruit Cousin", "Auto buy blox fruit cousin every 2 hours", function(state)

    
        if state then
            getgenv().autoCousin = true
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        else
            getgenv().autoCousin = false
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        end
    end)




    -- auto blox fruit dealer start

local FruitSection = MainTab:NewSection("Blox Fruit Dealer")
FruitSection:NewLabel("Auto buy will replace your current fruit.") 
FruitSection:NewToggle("Auto Buy Kilo", "Auto Buy Kilo", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spin", "Auto Buy Spin", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spin-Spin", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Chop", "Auto Buy Chop", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Chop-Chop", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spring", "Auto Buy Spring", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spring-Spring", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spike", "Auto Buy Spike", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spike-Spike", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Flame", "Auto Buy Flame", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Flame-Flame", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Falcon", "Auto Buy Falcon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Falcon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Ice", "Auto Buy Ice", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Ice-Ice", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Sand", "Auto Buy Sand", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Sand-Sand", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Revive", "Auto Buy Revive", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Revive-Revive", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dark", "Auto Buy Dark", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dark-Dark", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)

FruitSection:NewToggle("Auto Buy Diamond", "Auto Buy Diamond", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Diamond-Diamond", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Light", "Auto Buy Light", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Light-Light", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Love", "Auto Buy Love", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Love-Love", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rubber", "Auto Buy Rubber", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rubber-Rubber", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Barrier", "Auto Buy Barrier", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Barrier-Barrier", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Magma", "Auto Buy Magma", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Door", "Auto Buy Door", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Door-Door", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Quake", "Auto Buy Quake", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Quake-Quake", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Buddha", "Auto Buy Buddha", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Human-Human:Buddha", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy String", "Auto Buy String", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "String-String", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Phoenix", "Auto Buy Phoenix", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Phoenix", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rumble", "Auto Buy Rumble", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rumble-Rumble", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Paw", "Auto Buy Paw", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Paw-Paw", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Gravity", "Auto Buy Gravity", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Gravity-Gravity", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dough", "Auto Buy Dough", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dough-Dough", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Shadow", "Auto Buy Shadow", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Shadow-Shadow", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Venom", "Auto Buy Venom", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Venom-Venom", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Control", "Auto Buy Control", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Control-Control", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Soul", "Auto Buy Soul", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Soul-Soul", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dragon", "Auto Buy Dragon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dragon-Dragon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Leopard", "Auto Buy Leopard", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Leopard-Leopard", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)




-- auto blox fruit dealer end
local NewPlayerTab = Window:NewTab("Local Player")

local NewPlayerSection = NewPlayerTab:NewSection("Race")

NewPlayerSection:NewToggle("Auto Race Ability", "Auto use race ability", function(state)
    if state then
       getgenv().autoRace = true

       spawn (function()
        while getgenv().autoRace == true do
       
       
        local args = {
            [1] = "ActivateAbility"
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
        wait()
    end
end)
    else
        getgenv().autoRace = false

        spawn (function()
         while getgenv().autoRace == true do
        
        
         local args = {
             [1] = "ActivateAbility"
         }
         
         game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
         wait()
     end
 end)
    end
end)
-- auto race end 
--shop start 
local ShopTab = Window:NewTab("Shop")
local FightingStyleTab = ShopTab:NewSection("Fighting Styles")

FightingStyleTab:NewButton("Death Step", "Buy Death Step", function()
    local args = {
        [1] = "BuyDeathStep" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dark Step", "Buy Dark Step", function()
local args = {
    [1] = "BuyBlackLeg"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric", "Buy Electric", function()
    local args = {
        [1] = "BuyElectro" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric Claw", "Buy Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Water Kung Fu", "Buy Water Kung Fu", function()
    local args = {
        [1] = "BuyFishmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Sharkman Karate", "Buy Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)


FightingStyleTab:NewButton("Superhuman", "Buy Superhuman", function()
    local args = {
        [1] = "BuySuperhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Goduman", "Buy Godhuman", function()
    local args = {
        [1] = "BuyGodhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Dragon Breath", "Buy Dragon Breath", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dragon Talon", "Buy Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

local HakiSection = ShopTab:NewSection("Haki")

HakiSection:NewButton("Skyjump", "Buy Skyjump", function()
    local args = {
        [1] = "BuyHaki",
        [2] = "Geppo"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Enhancement", "Buy Enhancement", function()
   

local args = {
    [1] = "BuyHaki",
    [2] = "Buso"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Soru", "Buy Soru", function()
   

    local args = {
        [1] = "BuyHaki",
        [2] = "Soru"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)





-- shop end
local Tab2 = Window:NewTab("Settings")

local Section2 = Tab2:NewSection("Toggle GUI")

Section2:NewKeybind("Click to Toggle UI", " ", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)


  elseif game.PlaceId == 7449423635  then
    local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/drepdmoney/BackupUI/main/backuilua"))()

    local Window = Library.CreateLib("Dreps Hub | Blox Fruits", "DarkTheme")

    local MainTab = Window:NewTab("Main")

    

     
    local CousinSection = MainTab:NewSection("Blox Fruit Dealer Cousin")
    CousinSection:NewToggle("Auto Blox Fruit Cousin", "Auto buy blox fruit cousin every 2 hours", function(state)

    
        if state then
            getgenv().autoCousin = true
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        else
            getgenv().autoCousin = false
    
    spawn (function()
        while getgenv().autoCousin == true do
    
    local args = {
        [1] = "Cousin",
        [2] = "Buy"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    
    wait()
    end
    end)
        end
    end)




    -- auto blox fruit dealer start

local FruitSection = MainTab:NewSection("Blox Fruit Dealer")
FruitSection:NewLabel("Auto buy will replace your current fruit.") 
FruitSection:NewToggle("Auto Buy Kilo", "Auto Buy Kilo", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spin", "Auto Buy Spin", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spin-Spin", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Chop", "Auto Buy Chop", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Chop-Chop", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spring", "Auto Buy Spring", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spring-Spring", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Spike", "Auto Buy Spike", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Spike-Spike", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Flame", "Auto Buy Flame", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Flame-Flame", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Falcon", "Auto Buy Falcon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Falcon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Ice", "Auto Buy Ice", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Ice-Ice", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Sand", "Auto Buy Sand", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Sand-Sand", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Revive", "Auto Buy Revive", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Revive-Revive", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dark", "Auto Buy Dark", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dark-Dark", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)

FruitSection:NewToggle("Auto Buy Diamond", "Auto Buy Diamond", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Diamond-Diamond", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Light", "Auto Buy Light", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Light-Light", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Love", "Auto Buy Love", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Love-Love", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rubber", "Auto Buy Rubber", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rubber-Rubber", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Barrier", "Auto Buy Barrier", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Barrier-Barrier", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Magma", "Auto Buy Magma", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Magma-Magma", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Door", "Auto Buy Door", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Door-Door", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Quake", "Auto Buy Quake", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Quake-Quake", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Buddha", "Auto Buy Buddha", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Human-Human:Buddha", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy String", "Auto Buy String", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "String-String", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Phoenix", "Auto Buy Phoenix", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Bird-Bird:Phoenix", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Rumble", "Auto Buy Rumble", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Rumble-Rumble", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Paw", "Auto Buy Paw", function(state)
    if state then
        getgenv().autoDealer = true
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Paw-Paw", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Gravity", "Auto Buy Gravity", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Gravity-Gravity", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dough", "Auto Buy Dough", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dough-Dough", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Shadow", "Auto Buy Shadow", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Shadow-Shadow", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Venom", "Auto Buy Venom", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Venom-Venom", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Control", "Auto Buy Control", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Control-Control", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Soul", "Auto Buy Soul", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Soul-Soul", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)
FruitSection:NewToggle("Auto Buy Dragon", "Auto Buy Dragon", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Dragon-Dragon", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
        spawn(function()
            while getgenv().autoDealer == true do
        
        local args = {
            [1] = "PurchaseRawFruit",
            [2] = "Kilo-Kilo", -- fruit
            [3] = false
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
        wait()
        end
        end)
    end
end)
FruitSection:NewToggle("Auto Buy Leopard", "Auto Buy Leopard", function(state)
    if state then
        getgenv().autoDealer = true
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Leopard-Leopard", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    else
        getgenv().autoDealer = false
spawn(function()
    while getgenv().autoDealer == true do

local args = {
    [1] = "PurchaseRawFruit",
    [2] = "Kilo-Kilo", -- fruit
    [3] = false
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
wait()
end
end)
    end
end)




-- auto blox fruit dealer end
local NewPlayerTab = Window:NewTab("Local Player")

local NewPlayerSection = NewPlayerTab:NewSection("Race")

NewPlayerSection:NewToggle("Auto Race Ability", "Auto use race ability", function(state)
    if state then
       getgenv().autoRace = true

       spawn (function()
        while getgenv().autoRace == true do
       
       
        local args = {
            [1] = "ActivateAbility"
        }
        
        game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
        wait()
    end
end)
    else
        getgenv().autoRace = false

        spawn (function()
         while getgenv().autoRace == true do
        
        
         local args = {
             [1] = "ActivateAbility"
         }
         
         game:GetService("ReplicatedStorage").Remotes.CommE:FireServer(unpack(args))
         wait()
     end
 end)
    end
end)
local ESPSection = NewPlayerTab:NewSection("ESP")

ESPSection:NewButton("Player ESP", "Player ESP", function()
    local c = workspace.CurrentCamera
local ps = game:GetService("Players")
local lp = ps.LocalPlayer
local rs = game:GetService("RunService")

local function getdistancefc(part)
    return (part.Position - c.CFrame.Position).Magnitude
end

local function esp(p,cr)
    local h = cr:WaitForChild("Humanoid")
    local hrp = cr:WaitForChild("HumanoidRootPart")

    local text = Drawing.new("Text")
    text.Visible = false
    text.Center = true 
    text.Outline = true 
    text.Font = 2
    text.Color = Color3.fromRGB(255,255,255)
    text.Size = 13

    local c1 
    local c2 
    local c3 

    local function dc()
        text.Visible = false
        text:Remove()
        if c1 then
            c1:Disconnect()
            c1 = nil 
        end
        if c2 then
            c2:Disconnect()
            c2 = nil 
        end
        if c3 then
            c3:Disconnect()
            c3 = nil 
        end
    end

    c2 = cr.AncestryChanged:Connect(function(_,parent)
        if not parent then
            dc()
        end
    end)

    c3 = h.HealthChanged:Connect(function(v)
        if (v<=0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
            dc()
        end
    end)

    c1 = rs.RenderStepped:Connect(function()
        local hrp_pos,hrp_os = c:WorldToViewportPoint(hrp.Position)
        if hrp_os then
            text.Position = Vector2.new(hrp_pos.X,hrp_pos.Y)
            text.Text = p.Name .. ' ('..tostring(math.floor(getdistancefc(hrp)))..' ms)'
            text.Visible = true 
        else
            text.Visible = false 
        end
    end)
end

local function p_added(p)
    if p.Character then
        esp(p,p.Character)
    end
    p.CharacterAdded:Connect(function(cr)
        esp(p,cr)
    end)
end


for i,p in next, ps:GetPlayers() do 
    if p ~= lp then
        p_added(p)
    end
end

ps.PlayerAdded:Connect(p_added)
end)

-- auto race end 
--shop start 
local ShopTab = Window:NewTab("Shop")
local FightingStyleTab = ShopTab:NewSection("Fighting Styles")

FightingStyleTab:NewButton("Death Step", "Buy Death Step", function()
    local args = {
        [1] = "BuyDeathStep" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dark Step", "Buy Dark Step", function()
local args = {
    [1] = "BuyBlackLeg"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric", "Buy Electric", function()
    local args = {
        [1] = "BuyElectro" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Electric Claw", "Buy Electric Claw", function()
    local args = {
        [1] = "BuyElectricClaw" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Water Kung Fu", "Buy Water Kung Fu", function()
    local args = {
        [1] = "BuyFishmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Sharkman Karate", "Buy Sharkman Karate", function()
    local args = {
        [1] = "BuySharkmanKarate" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)


FightingStyleTab:NewButton("Superhuman", "Buy Superhuman", function()
    local args = {
        [1] = "BuySuperhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Goduman", "Buy Godhuman", function()
    local args = {
        [1] = "BuyGodhuman" -- any fighting style
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

FightingStyleTab:NewButton("Dragon Breath", "Buy Dragon Breath", function()
    local args = {
        [1] = "BlackbeardReward",
        [2] = "DragonClaw",
        [3] = "2"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)
FightingStyleTab:NewButton("Dragon Talon", "Buy Dragon Talon", function()
    local args = {
        [1] = "BuyDragonTalon"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

local HakiSection = ShopTab:NewSection("Haki")

HakiSection:NewButton("Skyjump", "Buy Skyjump", function()
    local args = {
        [1] = "BuyHaki",
        [2] = "Geppo"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Enhancement", "Buy Enhancement", function()
   

local args = {
    [1] = "BuyHaki",
    [2] = "Buso"
}

game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
end)

HakiSection:NewButton("Soru", "Buy Soru", function()
   

    local args = {
        [1] = "BuyHaki",
        [2] = "Soru"
    }
    
    game:GetService("ReplicatedStorage").Remotes.CommF_:InvokeServer(unpack(args))
    end)









-- shop end
local Tab2 = Window:NewTab("Settings")

local Section2 = Tab2:NewSection("Toggle GUI")

Section2:NewKeybind("Click to Toggle UI", " ", Enum.KeyCode.RightControl, function()
	Library:ToggleUI()
end)
end
